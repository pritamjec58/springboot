<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.falodi.bwm</groupId>
  <artifactId>simplespringboot</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>

  <name>simplespringboot Maven Webapp</name>
  <!-- the url gives you information about the project, where the project is hosted 
  Examples joda-time:
  
  <packaging>jar</packaging>
  <name>Joda-Time</name>
  <version>2.8-SNAPSHOT</version>
  <description>Date and time library to replace JDK date handling</description>
  <url>http://www.joda.org/joda-time/</url>
  -->
  <url>http://www.example.com</url>

<!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-parent -->
<parent>
<groupId>org.springframework.boot</groupId>
<artifactId>spring-boot-starter-parent</artifactId>
<version>2.0.3.RELEASE</version>
</parent>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    
<!-- defined this maven.compiler.source properties to tell Maven to use Java 8 to compile the project.  -->    
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <!-- Alternative, below configure the plugin directly. -->
    <!-- 
        <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.6.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
        </plugins>
    </build>
    
     -->
  </properties>

  <dependencies>
  
 
   
   
    <!-- <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency> -->
    
    <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web -->
    
    <!-- 
    If you have worked on latest UI development frameworks e.g. Node, angular, gulp etc. 
    then you must have appreciated the auto-reload of UI in browser whenever there is change in some code. 
    Its pretty useful and saves a lot of time.
	Well, same feature can be utilized in spring boot applications using spring-boot-devtools dependency provided features.
     -->
  <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-devtools</artifactId>
        <optional>true</optional>
    </dependency>
<dependency>
<groupId>org.springframework.boot</groupId>
<artifactId>spring-boot-starter-web</artifactId>
<!-- <scope>provided</scope> -->
<!--  Set the Tomcat server dependency to provide means if we uncomment this code we need to provide server.
<scope>provided</scope>
-->
</dependency>

 <!-- 
  If some of your Spring Boot libraries contain it by default, exclude it:
  -->
<!-- <dependency>
<groupId>org.springframework.boot</groupId>
<artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
</dependency> -->
 

  </dependencies>

  <build>
  <!-- <finalName> can be used to customize the name of the artifact. The value allows for system properties (standard or custom)  -->
    <finalName>simplespringboot</finalName>
  </build>
</project>
